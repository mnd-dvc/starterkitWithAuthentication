{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIBER2021\\\\Desktop\\\\starter-kit\\\\my-starter-kit\\\\src\\\\components\\\\View\\\\ModalView.jsx\";\nimport { Button, Modal, Tooltip } from \"antd\";\nimport React, { useState } from \"react\";\nimport { EyeOutlined } from \"@ant-design/icons\";\nfunction ModalView({\n  prop\n}) {\n  const [isModalOpen, setIsModalOpen] = useState();\n  const [SelectedRowData, setSelectedRowData] = useState(null);\n  const showModal = record => {\n    setIsModalOpen(true);\n    setSelectedRowData(record);\n  };\n  const handleOk = () => {\n    setIsModalOpen(false);\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"G\\xD6R\\xDCNT\\xDCLE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: \"5px\",\n      background: \"#009D7E\"\n    },\n    icon: /*#__PURE__*/React.createElement(EyeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }),\n    onClick: () => showModal(prop),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    title: \"PERSONEL G\\xD6R\\xDCNT\\xDCLEME\",\n    open: isModalOpen,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    footer: [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \" \", selectedRowData && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Sicili : \"), \" \", selectedRowData.sicili))));\n}\nexport default ModalView;","map":{"version":3,"names":["Button","Modal","Tooltip","React","useState","EyeOutlined","ModalView","prop","isModalOpen","setIsModalOpen","SelectedRowData","setSelectedRowData","showModal","record","handleOk","handleCancel","createElement","Fragment","title","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","background","icon","onClick","open","onOk","onCancel","footer","selectedRowData","sicili"],"sources":["C:/Users/SIBER2021/Desktop/starter-kit/my-starter-kit/src/components/View/ModalView.jsx"],"sourcesContent":["import { Button, Modal, Tooltip } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport {  EyeOutlined } from \"@ant-design/icons\";\r\n\r\nfunction ModalView({prop}) {\r\n  const [isModalOpen, setIsModalOpen] = useState();\r\n  const [SelectedRowData, setSelectedRowData] = useState(null); \r\n  const showModal = (record) => {\r\n    setIsModalOpen(true);\r\n    setSelectedRowData(record);\r\n  };\r\n  const handleOk = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Tooltip title=\"GÖRÜNTÜLE\">\r\n        <Button\r\n          style={{ margin: \"5px\", background: \"#009D7E\" }}\r\n          icon={<EyeOutlined />}\r\n          onClick={() => showModal(prop)}\r\n        />\r\n      </Tooltip>\r\n      <Modal\r\n        title=\"PERSONEL GÖRÜNTÜLEME\"\r\n        open={isModalOpen}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={[]}\r\n      > {selectedRowData && (\r\n        <>\r\n        <p>\r\n            <strong>Sicili : </strong> {selectedRowData.sicili}\r\n        </p>\r\n        </>\r\n      )}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalView;\r\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,KAAK,EAAEC,OAAO,QAAQ,MAAM;AAC7C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAAUC,WAAW,QAAQ,mBAAmB;AAEhD,SAASC,SAASA,CAAC;EAACC;AAAI,CAAC,EAAE;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,CAAC;EAChD,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAMQ,SAAS,GAAIC,MAAM,IAAK;IAC5BJ,cAAc,CAAC,IAAI,CAAC;IACpBE,kBAAkB,CAACE,MAAM,CAAC;EAC5B,CAAC;EACD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrBL,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EACD,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzBN,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EACD,oBACEN,KAAA,CAAAa,aAAA,CAAAb,KAAA,CAAAc,QAAA,qBACEd,KAAA,CAAAa,aAAA,CAACd,OAAO;IAACgB,KAAK,EAAC,oBAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBrB,KAAA,CAAAa,aAAA,CAAChB,MAAM;IACLyB,KAAK,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAU,CAAE;IAChDC,IAAI,eAAEzB,KAAA,CAAAa,aAAA,CAACX,WAAW;MAAAc,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAE;IACtBK,OAAO,EAAEA,CAAA,KAAMjB,SAAS,CAACL,IAAI,CAAE;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAChC,CACM,CAAC,eACVrB,KAAA,CAAAa,aAAA,CAACf,KAAK;IACJiB,KAAK,EAAC,+BAAsB;IAC5BY,IAAI,EAAEtB,WAAY;IAClBuB,IAAI,EAAEjB,QAAS;IACfkB,QAAQ,EAAEjB,YAAa;IACvBkB,MAAM,EAAE,EAAG;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACZ,GAAC,EAACU,eAAe,iBAChB/B,KAAA,CAAAa,aAAA,CAAAb,KAAA,CAAAc,QAAA,qBACAd,KAAA,CAAAa,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIrB,KAAA,CAAAa,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,WAAiB,CAAC,KAAC,EAACU,eAAe,CAACC,MAC7C,CACD,CAEG,CACP,CAAC;AAEP;AAEA,eAAe7B,SAAS"},"metadata":{},"sourceType":"module"}