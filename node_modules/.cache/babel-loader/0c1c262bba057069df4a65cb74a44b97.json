{"ast":null,"code":"\"use client\";\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport omit from \"rc-util/es/omit\";\nimport throttleByAnimationFrame from '../_util/throttleByAnimationFrame';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport { getFixedBottom, getFixedTop, getTargetRect } from './utils';\nconst TRIGGER_EVENTS = ['resize', 'scroll', 'touchstart', 'touchmove', 'touchend', 'pageshow', 'load'];\nfunction getDefaultTarget() {\n  return typeof window !== 'undefined' ? window : null;\n}\nvar AffixStatus;\n(function (AffixStatus) {\n  AffixStatus[AffixStatus[\"None\"] = 0] = \"None\";\n  AffixStatus[AffixStatus[\"Prepare\"] = 1] = \"Prepare\";\n})(AffixStatus || (AffixStatus = {}));\nconst InternalAffix = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a;\n  const {\n    style,\n    offsetTop,\n    offsetBottom,\n    affixPrefixCls,\n    rootClassName,\n    children,\n    target,\n    onChange\n  } = props;\n  const [lastAffix, setLastAffix] = React.useState(false);\n  const [affixStyle, setAffixStyle] = React.useState();\n  const [placeholderStyle, setPlaceholderStyle] = React.useState();\n  const status = React.useRef(AffixStatus.None);\n  const prevTarget = React.useRef(null);\n  const prevListener = React.useRef();\n  const placeholderNodeRef = React.useRef(null);\n  const fixedNodeRef = React.useRef(null);\n  const timer = React.useRef(null);\n  const {\n    getTargetContainer\n  } = React.useContext(ConfigContext);\n  const targetFunc = (_a = target !== null && target !== void 0 ? target : getTargetContainer) !== null && _a !== void 0 ? _a : getDefaultTarget;\n  const internalOffsetTop = offsetBottom === undefined && offsetTop === undefined ? 0 : offsetTop;\n  // =================== Measure ===================\n  const measure = () => {\n    if (status.current !== AffixStatus.Prepare || !fixedNodeRef.current || !placeholderNodeRef.current || !targetFunc) {\n      return;\n    }\n    const targetNode = targetFunc();\n    if (targetNode) {\n      const newState = {\n        status: AffixStatus.None\n      };\n      const placeholderRect = getTargetRect(placeholderNodeRef.current);\n      if (placeholderRect.top === 0 && placeholderRect.left === 0 && placeholderRect.width === 0 && placeholderRect.height === 0) {\n        return;\n      }\n      const targetRect = getTargetRect(targetNode);\n      const fixedTop = getFixedTop(placeholderRect, targetRect, internalOffsetTop);\n      const fixedBottom = getFixedBottom(placeholderRect, targetRect, offsetBottom);\n      if (fixedTop !== undefined) {\n        newState.affixStyle = {\n          position: 'fixed',\n          top: fixedTop,\n          width: placeholderRect.width,\n          height: placeholderRect.height\n        };\n        newState.placeholderStyle = {\n          width: placeholderRect.width,\n          height: placeholderRect.height\n        };\n      } else if (fixedBottom !== undefined) {\n        newState.affixStyle = {\n          position: 'fixed',\n          bottom: fixedBottom,\n          width: placeholderRect.width,\n          height: placeholderRect.height\n        };\n        newState.placeholderStyle = {\n          width: placeholderRect.width,\n          height: placeholderRect.height\n        };\n      }\n      newState.lastAffix = !!newState.affixStyle;\n      if (lastAffix !== newState.lastAffix) {\n        onChange === null || onChange === void 0 ? void 0 : onChange(newState.lastAffix);\n      }\n      status.current = newState.status;\n      setAffixStyle(newState.affixStyle);\n      setPlaceholderStyle(newState.placeholderStyle);\n      setLastAffix(newState.lastAffix);\n    }\n  };\n  const prepareMeasure = () => {\n    var _a;\n    status.current = AffixStatus.Prepare;\n    measure();\n    if (process.env.NODE_ENV === 'test') {\n      (_a = props === null || props === void 0 ? void 0 : props.onTestUpdatePosition) === null || _a === void 0 ? void 0 : _a.call(props);\n    }\n  };\n  const updatePosition = throttleByAnimationFrame(() => {\n    prepareMeasure();\n  });\n  const lazyUpdatePosition = throttleByAnimationFrame(() => {\n    // Check position change before measure to make Safari smooth\n    if (targetFunc && affixStyle) {\n      const targetNode = targetFunc();\n      if (targetNode && placeholderNodeRef.current) {\n        const targetRect = getTargetRect(targetNode);\n        const placeholderRect = getTargetRect(placeholderNodeRef.current);\n        const fixedTop = getFixedTop(placeholderRect, targetRect, internalOffsetTop);\n        const fixedBottom = getFixedBottom(placeholderRect, targetRect, offsetBottom);\n        if (fixedTop !== undefined && affixStyle.top === fixedTop || fixedBottom !== undefined && affixStyle.bottom === fixedBottom) {\n          return;\n        }\n      }\n    }\n    // Directly call prepare measure since it's already throttled.\n    prepareMeasure();\n  });\n  const addListeners = () => {\n    const listenerTarget = targetFunc === null || targetFunc === void 0 ? void 0 : targetFunc();\n    TRIGGER_EVENTS.forEach(eventName => {\n      var _a;\n      if (prevListener.current) {\n        (_a = prevTarget.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(eventName, prevListener.current);\n      }\n      listenerTarget === null || listenerTarget === void 0 ? void 0 : listenerTarget.addEventListener(eventName, lazyUpdatePosition);\n    });\n    prevTarget.current = listenerTarget;\n    prevListener.current = lazyUpdatePosition;\n  };\n  const removeListeners = () => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n      timer.current = null;\n    }\n    const newTarget = targetFunc === null || targetFunc === void 0 ? void 0 : targetFunc();\n    TRIGGER_EVENTS.forEach(eventName => {\n      var _a;\n      newTarget === null || newTarget === void 0 ? void 0 : newTarget.removeEventListener(eventName, lazyUpdatePosition);\n      if (prevListener.current) {\n        (_a = prevTarget.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(eventName, prevListener.current);\n      }\n    });\n    updatePosition.cancel();\n    lazyUpdatePosition.cancel();\n  };\n  React.useImperativeHandle(ref, () => ({\n    updatePosition\n  }));\n  // mount & unmount\n  React.useEffect(() => {\n    // [Legacy] Wait for parent component ref has its value.\n    // We should use target as directly element instead of function which makes element check hard.\n    timer.current = setTimeout(addListeners);\n    return () => removeListeners();\n  }, []);\n  React.useEffect(() => {\n    addListeners();\n  }, [target, affixStyle]);\n  React.useEffect(() => {\n    updatePosition();\n  }, [target, offsetTop, offsetBottom]);\n  const className = classNames({\n    [affixPrefixCls]: affixStyle,\n    [rootClassName]: affixStyle && rootClassName\n  });\n  let otherProps = omit(props, ['prefixCls', 'offsetTop', 'offsetBottom', 'target', 'onChange', 'affixPrefixCls', 'rootClassName']);\n  if (process.env.NODE_ENV === 'test') {\n    otherProps = omit(otherProps, ['onTestUpdatePosition']);\n  }\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: updatePosition\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: style,\n    ref: placeholderNodeRef\n  }, otherProps), affixStyle && /*#__PURE__*/React.createElement(\"div\", {\n    style: placeholderStyle,\n    \"aria-hidden\": \"true\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    ref: fixedNodeRef,\n    style: affixStyle\n  }, /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: updatePosition\n  }, children))));\n});\nconst Affix = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    prefixCls: customizePrefixCls,\n    rootClassName\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const affixPrefixCls = getPrefixCls('affix', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(affixPrefixCls);\n  const AffixProps = Object.assign(Object.assign({}, props), {\n    affixPrefixCls,\n    rootClassName: classNames(rootClassName, hashId)\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(InternalAffix, Object.assign({}, AffixProps, {\n    ref: ref\n  })));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Affix.displayName = 'Affix';\n}\nexport default Affix;","map":{"version":3,"names":["React","classNames","ResizeObserver","omit","throttleByAnimationFrame","ConfigContext","useStyle","getFixedBottom","getFixedTop","getTargetRect","TRIGGER_EVENTS","getDefaultTarget","window","AffixStatus","InternalAffix","forwardRef","props","ref","_a","style","offsetTop","offsetBottom","affixPrefixCls","rootClassName","children","target","onChange","lastAffix","setLastAffix","useState","affixStyle","setAffixStyle","placeholderStyle","setPlaceholderStyle","status","useRef","None","prevTarget","prevListener","placeholderNodeRef","fixedNodeRef","timer","getTargetContainer","useContext","targetFunc","internalOffsetTop","undefined","measure","current","Prepare","targetNode","newState","placeholderRect","top","left","width","height","targetRect","fixedTop","fixedBottom","position","bottom","prepareMeasure","process","env","NODE_ENV","onTestUpdatePosition","call","updatePosition","lazyUpdatePosition","addListeners","listenerTarget","forEach","eventName","removeEventListener","addEventListener","removeListeners","clearTimeout","newTarget","cancel","useImperativeHandle","useEffect","setTimeout","className","otherProps","createElement","onResize","Object","assign","Affix","prefixCls","customizePrefixCls","getPrefixCls","wrapSSR","hashId","AffixProps","displayName"],"sources":["C:/Users/SIBER2021/Desktop/starter-kit/node_modules/antd/es/affix/index.js"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport omit from \"rc-util/es/omit\";\nimport throttleByAnimationFrame from '../_util/throttleByAnimationFrame';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport { getFixedBottom, getFixedTop, getTargetRect } from './utils';\nconst TRIGGER_EVENTS = ['resize', 'scroll', 'touchstart', 'touchmove', 'touchend', 'pageshow', 'load'];\nfunction getDefaultTarget() {\n  return typeof window !== 'undefined' ? window : null;\n}\nvar AffixStatus;\n(function (AffixStatus) {\n  AffixStatus[AffixStatus[\"None\"] = 0] = \"None\";\n  AffixStatus[AffixStatus[\"Prepare\"] = 1] = \"Prepare\";\n})(AffixStatus || (AffixStatus = {}));\nconst InternalAffix = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a;\n  const {\n    style,\n    offsetTop,\n    offsetBottom,\n    affixPrefixCls,\n    rootClassName,\n    children,\n    target,\n    onChange\n  } = props;\n  const [lastAffix, setLastAffix] = React.useState(false);\n  const [affixStyle, setAffixStyle] = React.useState();\n  const [placeholderStyle, setPlaceholderStyle] = React.useState();\n  const status = React.useRef(AffixStatus.None);\n  const prevTarget = React.useRef(null);\n  const prevListener = React.useRef();\n  const placeholderNodeRef = React.useRef(null);\n  const fixedNodeRef = React.useRef(null);\n  const timer = React.useRef(null);\n  const {\n    getTargetContainer\n  } = React.useContext(ConfigContext);\n  const targetFunc = (_a = target !== null && target !== void 0 ? target : getTargetContainer) !== null && _a !== void 0 ? _a : getDefaultTarget;\n  const internalOffsetTop = offsetBottom === undefined && offsetTop === undefined ? 0 : offsetTop;\n  // =================== Measure ===================\n  const measure = () => {\n    if (status.current !== AffixStatus.Prepare || !fixedNodeRef.current || !placeholderNodeRef.current || !targetFunc) {\n      return;\n    }\n    const targetNode = targetFunc();\n    if (targetNode) {\n      const newState = {\n        status: AffixStatus.None\n      };\n      const placeholderRect = getTargetRect(placeholderNodeRef.current);\n      if (placeholderRect.top === 0 && placeholderRect.left === 0 && placeholderRect.width === 0 && placeholderRect.height === 0) {\n        return;\n      }\n      const targetRect = getTargetRect(targetNode);\n      const fixedTop = getFixedTop(placeholderRect, targetRect, internalOffsetTop);\n      const fixedBottom = getFixedBottom(placeholderRect, targetRect, offsetBottom);\n      if (fixedTop !== undefined) {\n        newState.affixStyle = {\n          position: 'fixed',\n          top: fixedTop,\n          width: placeholderRect.width,\n          height: placeholderRect.height\n        };\n        newState.placeholderStyle = {\n          width: placeholderRect.width,\n          height: placeholderRect.height\n        };\n      } else if (fixedBottom !== undefined) {\n        newState.affixStyle = {\n          position: 'fixed',\n          bottom: fixedBottom,\n          width: placeholderRect.width,\n          height: placeholderRect.height\n        };\n        newState.placeholderStyle = {\n          width: placeholderRect.width,\n          height: placeholderRect.height\n        };\n      }\n      newState.lastAffix = !!newState.affixStyle;\n      if (lastAffix !== newState.lastAffix) {\n        onChange === null || onChange === void 0 ? void 0 : onChange(newState.lastAffix);\n      }\n      status.current = newState.status;\n      setAffixStyle(newState.affixStyle);\n      setPlaceholderStyle(newState.placeholderStyle);\n      setLastAffix(newState.lastAffix);\n    }\n  };\n  const prepareMeasure = () => {\n    var _a;\n    status.current = AffixStatus.Prepare;\n    measure();\n    if (process.env.NODE_ENV === 'test') {\n      (_a = props === null || props === void 0 ? void 0 : props.onTestUpdatePosition) === null || _a === void 0 ? void 0 : _a.call(props);\n    }\n  };\n  const updatePosition = throttleByAnimationFrame(() => {\n    prepareMeasure();\n  });\n  const lazyUpdatePosition = throttleByAnimationFrame(() => {\n    // Check position change before measure to make Safari smooth\n    if (targetFunc && affixStyle) {\n      const targetNode = targetFunc();\n      if (targetNode && placeholderNodeRef.current) {\n        const targetRect = getTargetRect(targetNode);\n        const placeholderRect = getTargetRect(placeholderNodeRef.current);\n        const fixedTop = getFixedTop(placeholderRect, targetRect, internalOffsetTop);\n        const fixedBottom = getFixedBottom(placeholderRect, targetRect, offsetBottom);\n        if (fixedTop !== undefined && affixStyle.top === fixedTop || fixedBottom !== undefined && affixStyle.bottom === fixedBottom) {\n          return;\n        }\n      }\n    }\n    // Directly call prepare measure since it's already throttled.\n    prepareMeasure();\n  });\n  const addListeners = () => {\n    const listenerTarget = targetFunc === null || targetFunc === void 0 ? void 0 : targetFunc();\n    TRIGGER_EVENTS.forEach(eventName => {\n      var _a;\n      if (prevListener.current) {\n        (_a = prevTarget.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(eventName, prevListener.current);\n      }\n      listenerTarget === null || listenerTarget === void 0 ? void 0 : listenerTarget.addEventListener(eventName, lazyUpdatePosition);\n    });\n    prevTarget.current = listenerTarget;\n    prevListener.current = lazyUpdatePosition;\n  };\n  const removeListeners = () => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n      timer.current = null;\n    }\n    const newTarget = targetFunc === null || targetFunc === void 0 ? void 0 : targetFunc();\n    TRIGGER_EVENTS.forEach(eventName => {\n      var _a;\n      newTarget === null || newTarget === void 0 ? void 0 : newTarget.removeEventListener(eventName, lazyUpdatePosition);\n      if (prevListener.current) {\n        (_a = prevTarget.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(eventName, prevListener.current);\n      }\n    });\n    updatePosition.cancel();\n    lazyUpdatePosition.cancel();\n  };\n  React.useImperativeHandle(ref, () => ({\n    updatePosition\n  }));\n  // mount & unmount\n  React.useEffect(() => {\n    // [Legacy] Wait for parent component ref has its value.\n    // We should use target as directly element instead of function which makes element check hard.\n    timer.current = setTimeout(addListeners);\n    return () => removeListeners();\n  }, []);\n  React.useEffect(() => {\n    addListeners();\n  }, [target, affixStyle]);\n  React.useEffect(() => {\n    updatePosition();\n  }, [target, offsetTop, offsetBottom]);\n  const className = classNames({\n    [affixPrefixCls]: affixStyle,\n    [rootClassName]: affixStyle && rootClassName\n  });\n  let otherProps = omit(props, ['prefixCls', 'offsetTop', 'offsetBottom', 'target', 'onChange', 'affixPrefixCls', 'rootClassName']);\n  if (process.env.NODE_ENV === 'test') {\n    otherProps = omit(otherProps, ['onTestUpdatePosition']);\n  }\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: updatePosition\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: style,\n    ref: placeholderNodeRef\n  }, otherProps), affixStyle && /*#__PURE__*/React.createElement(\"div\", {\n    style: placeholderStyle,\n    \"aria-hidden\": \"true\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    ref: fixedNodeRef,\n    style: affixStyle\n  }, /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: updatePosition\n  }, children))));\n});\nconst Affix = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    prefixCls: customizePrefixCls,\n    rootClassName\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const affixPrefixCls = getPrefixCls('affix', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(affixPrefixCls);\n  const AffixProps = Object.assign(Object.assign({}, props), {\n    affixPrefixCls,\n    rootClassName: classNames(rootClassName, hashId)\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(InternalAffix, Object.assign({}, AffixProps, {\n    ref: ref\n  })));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Affix.displayName = 'Affix';\n}\nexport default Affix;"],"mappings":"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"},"metadata":{},"sourceType":"module"}